package unboks.internal

import java.util.*
import kotlin.properties.ReadWriteProperty
import kotlin.reflect.KProperty

/**
 * Access modifiers for types (classes/interfaces), fields and methods.
 *
 * Not every modifier is valid for every type/field/method. For reference, see
 * JVMS table 4.1-A, 4.5-A and 4.6-A.
 */
internal enum class Access(shift: Int, applicable: Set<Tfm>, incompatible: Set<Int> = emptySet()) {

	/** Declared public; may be accessed from outside its package. */
	PUBLIC       (0, setOf(Tfm.TYPE, Tfm.FIELD, Tfm.METHOD), setOf(1, 2)),

	/** Declared private; usable/accessible only within the defining class. */
	PRIVATE      (1, setOf(Tfm.FIELD, Tfm.METHOD), setOf(0, 2)),

	/** Declared protected; may be accessed within subclasses. */
	PROTECTED    (2, setOf(Tfm.FIELD, Tfm.METHOD), setOf(0, 1)),

	/** Declared static. */
	STATIC       (3, setOf(Tfm.FIELD, Tfm.METHOD)),

	/** Types:   Declared final; no subclasses allowed.
	 *  Fields:  Declared final; never directly assigned to after object construction (JLS ยง17.5).
	 *  Methods: Declared final; must not be overridden (ยง5.4.5). */
	FINAL        (4, setOf(Tfm.TYPE, Tfm.FIELD, Tfm.METHOD)),

	/** Treat superclass methods specially when invoked by the invokespecial instruction. */
	SUPER        (5, setOf(Tfm.TYPE)),

	/** Declared synchronized; invocation is wrapped by a monitor use. */
	SYNCHRONIZED (5, setOf(Tfm.METHOD)),

	/** Declared volatile; cannot be cached. */
	VOLATILE     (6, setOf(Tfm.FIELD)),

	/** A bridge method, generated by the compiler. */
	BRIDGE       (6, setOf(Tfm.METHOD)),

	/** Declared transient; not written or read by a persistent object manager. */
	TRANSIENT    (7, setOf(Tfm.FIELD)),

	/** Declared with variable number of arguments. */
	VARARGS      (7, setOf(Tfm.METHOD)),

	/** Declared native; implemented in a language other than Java. */
	NATIVE       (8, setOf(Tfm.METHOD)),

	/** Is an interface, not a class. */
	INTERFACE    (9, setOf(Tfm.TYPE)),

	/** Types:   Declared abstract; must not be instantiated.
	 *  Methods: Declared abstract; no implementation is provided. */
	ABSTRACT    (10, setOf(Tfm.TYPE, Tfm.METHOD)),

	/** Declared strictfp; floating-point mode is FP-strict. */
	STRICT      (11, setOf(Tfm.METHOD)),

	/** Declared synthetic; not present in the source code. */
	SYNTHETIC   (12, setOf(Tfm.TYPE, Tfm.FIELD, Tfm.METHOD)),

	/** Declared as an annotation type. */
	ANNOTATION  (13, setOf(Tfm.TYPE)),

	/** Types: Declared as an enum type.
	 *  Fields: Declared as an element of an enum. */
	ENUM        (14, setOf(Tfm.TYPE, Tfm.FIELD));


	internal enum class Tfm {
		TYPE,
		METHOD,
		FIELD
	}

	private val mask = 1 shl shift

	private val tmf = applicable
			.map { 1 shl it.ordinal }
			.reduce { acc, x -> acc or x }

	private val clearMask = incompatible
			.fold(0) { acc, shift -> acc or (1 shl shift) }
			.inv()

	private fun supports(t: Tfm): Boolean = tmf and (1 shl t.ordinal) != 0

	private fun get(box: Box): Boolean = box.accessBits and mask != 0

	private fun set(box: Box, value: Boolean) {
		if (value)
			box.accessBits = (box.accessBits and clearMask) or mask
		else
			box.accessBits = box.accessBits and mask.inv()
	}

	internal class Box(val tfm: Tfm, var accessBits: Int) {
		override fun toString(): String {
			val sj = StringJoiner(" ")
			for (access in values()) {
				if (access.supports(tfm) && access.get(this))
					sj.add(access.name.toLowerCase())
			}
			return sj.toString()
		}
	}

	internal class Property(private val box: Box, private val access: Access) : ReadWriteProperty<Any, Boolean> {
		init {
			if (!access.supports(box.tfm))
				throw IllegalArgumentException("$access does not support ${box.tfm}")
		}
		override fun getValue(thisRef: Any, property: KProperty<*>): Boolean =  access.get(box)
		override fun setValue(thisRef: Any, property: KProperty<*>, value: Boolean) = access.set(box, value)
	}
}
